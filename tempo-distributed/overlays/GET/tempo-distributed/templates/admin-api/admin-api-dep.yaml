---
# Source: tempo-distributed/templates/admin-api/admin-api-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {}
  labels:
    helm.sh/chart: tempo-distributed-1.23.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/component: admin-api
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/managed-by: Helm
  name: tempo-admin-api
  namespace: "grafana-enterprise-traces"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/component: admin-api
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-distributed-1.23.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/version: "2.6.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: admin-api
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 9065dfcb52c837526ce7c85002346e4ff68c82cd91028904584e213b2cc29839
      namespace: "grafana-enterprise-traces"
    spec:
      serviceAccountName: tempo
      securityContext:
        {}
      initContainers:
      
      containers:
        - name: admin-api
          image: "docker.io/grafana/enterprise-traces:v2.6.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=admin-api"
            - "-config.expand-env=true"
            - "-config.file=/conf/tempo.yaml"
          volumeMounts:
            - mountPath: /conf
              name: config
            - name: license
              mountPath: /license
            - name: storage
              mountPath: "/data"
              subPath: 
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
          securityContext:
            readOnlyRootFilesystem: true
          envFrom:
      nodeSelector:
        {}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/instance: tempo
              app.kubernetes.io/component: admin-api
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: tempo
                    app.kubernetes.io/component: admin-api
                topologyKey: kubernetes.io/hostname
            - weight: 75
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: tempo
                    app.kubernetes.io/component: admin-api
                topologyKey: topology.kubernetes.io/zone
        
      tolerations:
        []
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: tempo-config
            items:
              - key: "tempo.yaml"
                path: "tempo.yaml"
        - name: runtime-config
          configMap:
            name: tempo-runtime
        - name: license
          secret:
            secretName: tempo-license
        - name: storage
          emptyDir: {}
